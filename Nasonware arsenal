local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ðŸ”¥ NASONWARE ðŸ”«",
   LoadingTitle = "ðŸ”« Nasonware ðŸ’¥",
   LoadingSubtitle = "Nasonware",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- 
      FileName = "Example Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- 
      RememberJoins = true -- 
   },
   KeySystem = nil, -- Set this to true to use key system
   KeySettings = {
      Title = "Key | Youtube Hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "YoutubeHubKey1", -- 
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/AtgzSPWK"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Combat", nil) -- Title, Image
local Section = MainTab:CreateSection("Main")
Section:Set("menu")

Rayfield:Notify({
   Title = "Script Loaded",
   Content = "Successfully Loaded",
   Duration = 6.5,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Toggle = MainTab:CreateToggle({
    Name = "Aimbot",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps 
    Callback = function(Value) local Rayfield = loadstring(game:HttpGet('https://pastebin.com/raw/dza3Z6QG'))()
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })

local Toggle = MainTab:CreateToggle({
   Name = "Silent Aim",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value) local Rayfield = loadstring(game:HttpGet('https://pastebin.com/raw/SkFKRQ1p'))()
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})

local MainTab = Window:CreateTab("Esp", nil) -- Title, Image 
local Section = MainTab:CreateSection("Main")
Section:Set("menu")

local Toggle = MainTab:CreateToggle({
   Name = "Box Esp",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value) local Rayfield = loadstring(game:HttpGet('https://pastebin.com/raw/83qTzr2g'))()
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "Nametags",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value) local Rayfield = loadstring(game:HttpGet('https://pastebin.com/raw/xwhGWM40'))()
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})


local Toggle = MainTab:CreateToggle({
   Name = "Skeleton Esp",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value) local Rayfield = loadstring(game:HttpGet('https://pastebin.com/raw/1Ae75f3X'))()
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false https://pastebin.com/raw/L9fMAdRf
   end,
})


local MainTab = Window:CreateTab("Gun", nil) -- Title, Image 
local Section = MainTab:CreateSection("Main")
Section:Set("menu")

local Toggle = MainTab:CreateToggle({
	Name = "Inf Ammo",
    CurrentValue = false,
     Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function()
      		while wait() do	game:GetService("Players").LocalPlayer.PlayerGui.GUI.Client.Variables.ammocount.Value = 999	game:GetService("Players").LocalPlayer.PlayerGui.GUI.Client.Variables.ammocount2.Value = 999
end
  	end    
})

local replicationstorage = game.ReplicatedStorage

local Toggle = MainTab:CreateToggle({
	Name = "Rapid Fire",
	Callback = function()
    for i, v in pairs(replicationstorage.Weapons:GetDescendants()) do
 if v.Name == "FireRate" then
       v.Value = 0.05
   end
end
  	end    
})

local Toggle = MainTab:CreateToggle({
   Name = "Rainbow Gun",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value) local Rayfield = loadstring(game:HttpGet('https://pastebin.com/raw/9vTsxta8'))()
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})

local MainTab = Window:CreateTab("Player", nil) -- Title, Image 
local Section = MainTab:CreateSection("Main")
Section:Set("menu")

local Toggle = MainTab:CreateToggle({
   Name = "Inf Jump",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value) local Rayfield = loadstring(game:HttpGet('https://pastebin.com/raw/9Pbf0K3f'))()
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})
